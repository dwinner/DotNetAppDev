var PLUGIN_NAME, gutil, path, through;

gutil = require("gulp-util");

through = require("through2");

path = require("path");

PLUGIN_NAME = "gulp-rename2";

module.exports = function(rules, options) {
  var rename;
  options = options || {};
  if (options.debug) {
    gutil.log("[DEBUG] transformation function: ", rules);
    gutil.log("[DEBUG] options: ", options);
  }
  if (typeof rules !== "function") {
    throw new gutil.PluginError(PLUGIN_NAME, "[ERROR] Missing transformation function.");
  }
  rename = function(file, encoding, cb) {
    var cwd, err, newPath, relativeFilepath;
    cwd = file.cwd || process.cwd();
    relativeFilepath = path.relative(cwd, file.path);
    if (options.verbose) {
      gutil.log("Original path: ", relativeFilepath);
    }
    newPath = rules(path, relativeFilepath);
    if (options.verbose) {
      gutil.log("Transformed path: ", newPath);
    }
    if (!newPath) {
      this.emit("error", err = new gutil.PluginError(PLUGIN_NAME, "[ERROR] The new path is not valid. Please check your transformation function to ensure it returns a valid path"));
      return cb(err);
    }
    file.path = path.resolve(cwd, newPath);
    this.push(file);
    cb();
  };
  return through.obj(rename);
};
